# Build UI stage
FROM node:18-alpine as ui-builder

WORKDIR /ui
COPY web/ui/package*.json ./
RUN npm install

COPY web/ui ./
RUN npm run build:testnet

# Build server stage
FROM python:3.11-slim as server

WORKDIR /app

# Install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY ./web/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt
RUN opentelemetry-bootstrap -a install
RUN pip install --upgrade protobuf

# Copy necessary files
COPY ./web/api ./api
COPY ./hivemind_exp/*_utils.py ./hivemind_exp/
COPY ./hivemind_exp/__init__.py ./hivemind_exp/
COPY ./hivemind_exp/contracts/*.json ./hivemind_exp/contracts/

# Copy built UI from ui-builder stage
COPY --from=ui-builder /ui/dist ./ui/dist

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV OTEL_SERVICE_NAME=rlswarm-fastapi
ENV OTEL_TRACES_EXPORTER=otlp
ENV OTEL_METRICS_EXPORTER=otlp
ENV OTEL_LOGS_EXPORTER=otlp

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/api/healthz || exit 1

# Expose port
EXPOSE 8000

# Start FastAPI with OpenTelemetry
CMD ["opentelemetry-instrument", "uvicorn", "api.server:app", "--host", "0.0.0.0", "--port", "8000"]
